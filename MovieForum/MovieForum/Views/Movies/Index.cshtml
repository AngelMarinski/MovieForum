@model PaginatedList<MovieForum.Services.DTOModels.MovieDTO>
@inject MovieForum.Services.Interfaces.IGenreServices genreServices


@{
    string page_title = "Movies";
    var paramToSort = new List<string>
{
        "Title", "Releasedate", "Rating", "Comments"
    };
    var sortBy = new SelectList(paramToSort);

    var genres = new SelectList(await this.genreServices.GetAll(), "Name", "Name");
}


<html>

<head>
    <title>@page_title</title>
    <link rel="stylesheet" href="css/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="css/elegant-icons.css" type="text/css">
    <link rel="stylesheet" href="css/plyr.css" type="text/css">
    <link rel="stylesheet" href="css/owl.carousel.min.css" type="text/css">
    <link rel="stylesheet" href="css/slicknav.min.css" type="text/css">
    <link rel="stylesheet" href="css/style.css" type="text/css">
</head>

<body>
    <br>
    <br>
    <br>
    <center>
        <div class="wrapper" style="position:center">
            <div class="search_box">
                <div class="dropdown">
                    <div id="defopt" class="default_option">Title</div>
                    <ul>
                        <li>Title</li>
                        <li>Tag</li>
                        <li>Username</li>
                        <li>Year</li>
                    </ul>
                </div>
                <div class="search_field">
                    <form asp-controller="Movies" asp-action="Index" method="get" class="search_field">
                        <input type="text" class="input" name="Title" placeholder="Search">
                        <button type="submit" class="fas fa-search btn btn-outline-light" style="top:10%";></button>
                    </form>
                </div>
            </div>
        </div>
    </center>
  <br>
  <br>
  <center>
    <div class="sort-by-div" style="margin-bottom: 10px">
        <form asp-controller="Movies" asp-action="Index" method="get" id="filter-form">
            <label>Sort By</label>
            <select asp-items="@sortBy" name="SortBy" class="select-sortBy"
                    style="border-radius: 9px" id="sortByDropdown">
                <option value="" selected disabled hidden> </option>
            </select>

            <label>Genre</label>
            <select asp-items="@genres" name="Genre" class="select-sortBy"
                    style="border-radius: 9px" id="genreDropdown">
                <option value="" selected disabled hidden> </option>
            </select>

            <label>Rating</label>
            <input name="MinRating" type="range" id="volume"
                   min="0" max="10" value="0" />
@*
            <input asp-route-Title="@this.ViewData["Title"]" name="Title" hidden />*@

            <input type="submit" value="Filter" class="btn btn-primary" />
        </form>
    </div>
    </center>
    <section class="product spad">
        <div class="container">

            <div class="row">

                <div class="trending__product">
                    <div class="row">
                        @{
                            bool Empty = true;
                            foreach (var movie in this.Model)
                            {
                                Empty = false;
                                <div class="col-lg-4 col-md-6 col-sm-6">
                                    <a href="movies/movie/@movie.Id">
                                        <div class="product__item">
                                            <div class="product__item__pic">
                                                <img src="~/@movie.ImagePath" class="movie-album-pic" />
                                                <div class="ep">@movie.Genre.Name</div>
                                                <div class="comment"><i class="fa fa-comments"></i> @movie.Comments.Count</div>
                                                <div class="rating-preview"><i class="fa fa-star"></i> @string.Format("{0:0.0}", movie.Rating)</div>
                                            </div>
                                            <div class="product__item__text">
                                                <ul>
                                                    <li>@movie.ReleaseDate.ToString("MMMM dd, yyyy")</li>
                                                    <li>@movie.Username</li>
                                                </ul>
                                                <h5>@movie.Title</h5>
                                            </div>
                                        </div>
                                    </a>
                                </div>
                            }

                            if (Empty)
                            {
                                <center><h5>No Results Found! &#128531;	</h5></center>
                            }


                        }

                    </div>
                </div>
            </div>
        </div>
    </section>

    @{
        string hasPrevPage = this.Model.HasPreviousPage ? "" : "disabled";
        string hasNextPage = this.Model.HasNextPage ? "" : "disabled";
    }
    <hr />
    <div class="pagination">
        <a asp-controller="Movies" asp-action="Index" asp-route-Title="@this.ViewData["Title"]"
           asp-route-SortBy="@this.ViewData["SortBy"]" asp-route-Genre="@this.ViewData["Genre"]" asp-route-MinRating="@this.ViewData["Rating"]" 
           asp-route-PageNumber="@(this.Model.PageNumber - 1)" class="btn btn-outline-light @hasPrevPage page-buttons"> &lt;Prev</a>
        <br />
        <a asp-controller="Movies" asp-action="Index" asp-route-Title="@this.ViewData["Title"]" asp-route-SortBy="@this.ViewData["SortBy"]" 
           asp-route-Genre="@this.ViewData["Genre"]" asp-route-MinRating="@this.ViewData["Rating"]" 
           asp-route-PageNumber="@(this.Model.PageNumber + 1)" class="btn btn-outline-light @hasNextPage page-buttons">Next&gt;</a>
    </div>
</body>
<script>
    @*if (localStorage['sortByDropdown']) {
        document.getElementById('sortByDropdown').value = localStorage['sortByDropdown'];
    }

    if (localStorage['genreDropdown']) {
        document.getElementById('genreDropdown').value = localStorage['genreDropdown'];
    }

    if (localStorage['volume']) {
        document.getElementById('volume').value = localStorage['volume'];
    }

    document.getElementById('filter-form').addEventListener('submit', (event) => {

        var sortByInput = document.getElementById('sortByDropdown').value;
        var genreInput = document.getElementById('genreDropdown').value;
        var ratingInput = document.getElementById('volume').value;


        localStorage['sortByDropdown'] = sortByInput;
        localStorage['genreDropdown'] = genreInput;
        localStorage['volume'] = ratingInput;
     });*@
    </script>
<script src="https://kit.fontawesome.com/b99e675b6e.js"></script>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script>
    $(document).ready(function () {
        $(".default_option").click(function () {
            $(".dropdown ul").addClass("active");

        });

        $(".dropdown ul li").click(function () {
            var text = $(this).text();
            $(".default_option").text(text);
            $(".dropdown ul").removeClass("active");
            $('input').attr('name', text);


        });
        $(".input").click(function () {
            $(".dropdown ul").removeClass("active");

        });
       
    });
</script>
</html>

